{
  "version": "4.67.0",
  "application": {
    "aimms.widget.type": {
      "literal": "application"
    },
    "browsername": {
      "aimms": {
        "contents": [
          "webui::ClientBrowserName"
        ]
      }
    },
    "browsertimezone": {
      "aimms": {
        "contents": [
          "webui::BrowserTimeZone"
        ]
      }
    },
    "ignoredst": {
      "aimms": {
        "contents": [
          "webui::IgnoreDST"
        ]
      }
    },
    "pages": {
      "literal": {
        "name": "root",
        "slug": "root",
        "children": [
          {
            "name": "Main Project",
            "slug": "main_project",
            "children": [
              {
                "name": "home",
                "slug": "home",
                "type": "pagev2-grid",
                "children": [
                  {
                    "name": "CRUD",
                    "type": "pagev2-grid-dialog",
                    "slug": "crud",
                    "children": []
                  }
                ]
              },
              {
                "name": "Story",
                "type": "pagev2-grid",
                "slug": "problem_description",
                "children": []
              },
              {
                "name": "Inputs",
                "type": "pagev2-grid",
                "slug": "inputs",
                "children": []
              },
              {
                "name": "Results",
                "type": "pagev2-grid",
                "slug": "results",
                "children": [
                  {
                    "name": "Model Information",
                    "type": "pagev2-grid-sidepanel",
                    "slug": "model_information",
                    "children": []
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "statusmessages": {
      "aimms": {
        "contents": [
          "sp_statusBar"
        ],
        "slices": [
          {
            "identifier": "sp_statusBar",
            "slice": [
              {
                "index": "webui::indexApplicationExtension",
                "type": "free",
                "value": "webui::indexApplicationExtension"
              },
              {
                "index": "webui::indexStatusBarSpec",
                "type": "free",
                "value": "webui::indexStatusBarSpec"
              }
            ]
          }
        ]
      }
    },
    "theme.classic": {
      "literal": "NOT_ALLOWED"
    },
    "timezone": {
      "aimms": {
        "contents": [
          "webui::DisplayTimeZone"
        ]
      }
    },
    "timezone.dst.readonly": {
      "aimms": {
        "contents": [
          "webui::DefaultDSTSettingForDisplayTimeZone"
        ]
      }
    },
    "workflows.configuration": {
      "aimms": {
        "contents": [
          "sp_myWorkflowSteps"
        ],
        "slices": [
          {
            "identifier": "sp_myWorkflowSteps",
            "slice": [
              {
                "index": "webui::indexWorkflowOrder",
                "type": "free",
                "value": "webui::indexWorkflowOrder"
              },
              {
                "index": "webui::indexNoOfPages",
                "type": "free",
                "value": "webui::indexNoOfPages"
              },
              {
                "index": "webui::indexWorkflowPageSpec",
                "type": "free",
                "value": "webui::indexWorkflowPageSpec"
              }
            ]
          }
        ]
      }
    },
    "workflows.information": {
      "aimms": {
        "contents": [
          "sp_myWorkflows"
        ],
        "slices": [
          {
            "identifier": "sp_myWorkflows",
            "slice": [
              {
                "index": "webui::indexWorkflowOrder",
                "type": "free",
                "value": "webui::indexWorkflowOrder"
              },
              {
                "index": "webui::indexWorkflowSpec",
                "type": "free",
                "value": "webui::indexWorkflowSpec"
              }
            ]
          }
        ]
      }
    }
  },
  "layouts/custom_ae8aa3ba-f894-467c-9e3e-6fccf57f8fce": {
    "definition": {
      "literal": {
        "componentName": "Grid",
        "props": {
          "gridTemplateColumns": "0.8fr 0.2fr",
          "gridTemplateRows": "20% 78%",
          "gridTemplateAreas": "\"area-a area-b\" \"area-a area-c\""
        },
        "items": [
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-a",
              "name": "Area A",
              "gridAutoFlow": "column"
            }
          },
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-b",
              "name": "Area B",
              "gridAutoFlow": "row"
            }
          },
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-c",
              "name": "Area C",
              "gridAutoFlow": "row"
            }
          }
        ]
      }
    },
    "displayName": {
      "literal": "LayoutResults"
    }
  },
  "pages/crud": {
    "aimms.widget.type": {
      "literal": "pagev2-grid-dialog"
    },
    "bindings": {
      "literal": [
        {
          "widgetUri": "scl_addEditElement",
          "gridArea": "area-a",
          "dndId": "Unassigned widgetsscl_addEditElement0"
        }
      ]
    },
    "maxcolumns": {
      "literal": 1
    },
    "maxrows": {
      "literal": 1
    },
    "widgets": {
      "literal": [
        {
          "uri": "scl_addEditElement",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        }
      ]
    }
  },
  "pages/home": {
    "aimms.widget.type": {
      "literal": "pagev2-grid"
    },
    "bindings": {
      "literal": [
        {
          "widgetUri": "img_homeLogo",
          "gridArea": "area-d",
          "dndId": "area-aimg_homeLogo0"
        },
        {
          "widgetUri": "txt_welcome",
          "gridArea": "area-a",
          "dndId": "area-atxt_welcome1"
        }
      ]
    },
    "layoutId": {
      "literal": "Layout10"
    },
    "widgets": {
      "literal": [
        {
          "uri": "img_homeLogo",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "txt_welcome",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        }
      ]
    }
  },
  "pages/inputs": {
    "aimms.widget.type": {
      "literal": "pagev2-grid"
    },
    "bindings": {
      "literal": [
        {
          "widgetUri": "scl_maxWeightKnapsack_1",
          "gridArea": "area-d",
          "dndId": "Unassigned widgetsscl_maxWeightKnapsack_13"
        },
        {
          "widgetUri": "scl_maxWeightKnapsack",
          "gridArea": "area-c",
          "dndId": "area-cscl_maxWeightKnapsack0"
        },
        {
          "widgetUri": "sld_maxItems",
          "gridArea": "area-b",
          "dndId": "area-bsld_maxItems1"
        },
        {
          "widgetUri": "tbl_items",
          "gridArea": "area-a",
          "dndId": "area-atbl_items2"
        }
      ]
    },
    "layoutId": {
      "literal": "Layout10"
    },
    "secondarypageactions": {
      "aimms": {
        "contents": [
          "sp_inputsSecondaryActions"
        ],
        "slices": [
          {
            "identifier": "sp_inputsSecondaryActions",
            "slice": [
              {
                "index": "webui::indexPageExtension",
                "type": "free",
                "value": "webui::indexPageExtension"
              },
              {
                "index": "webui::indexPageActionSpec",
                "type": "free",
                "value": "webui::indexPageActionSpec"
              }
            ]
          }
        ]
      }
    },
    "widgets": {
      "literal": [
        {
          "uri": "tbl_items",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "scl_maxWeightKnapsack",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "sld_maxItems",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "scl_maxWeightKnapsack_1",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        }
      ]
    }
  },
  "pages/model_information": {
    "aimms.widget.type": {
      "literal": "pagev2-grid-sidepanel"
    },
    "bindings": {
      "literal": [
        {
          "widgetUri": "scl_modelInformation",
          "gridArea": "area-a",
          "dndId": "Unassigned widgetsscl_modelInformation0"
        }
      ]
    },
    "widgets": {
      "literal": [
        {
          "uri": "scl_modelInformation",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        }
      ]
    }
  },
  "pages/problem_description": {
    "aimms.widget.type": {
      "literal": "pagev2-grid"
    },
    "bindings": {
      "literal": [
        {
          "widgetUri": "txt_problemDescription",
          "gridArea": "area-a",
          "dndId": "Unassigned widgetstxt_problemDescription0"
        }
      ]
    },
    "layoutId": {
      "literal": "Layout11"
    },
    "widgets": {
      "literal": [
        {
          "uri": "txt_problemDescription",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        }
      ]
    }
  },
  "pages/results": {
    "aimms.widget.type": {
      "literal": "pagev2-grid"
    },
    "bindings": {
      "literal": [
        {
          "widgetUri": "mslc_multiselectFilter",
          "gridArea": "area-c",
          "dndId": "area-cmslc_multiselectFilter0"
        },
        {
          "widgetUri": "cmb_results",
          "gridArea": "area-a",
          "dndId": "area-acmb_results1"
        },
        {
          "widgetUri": "cmb_weightResults",
          "gridArea": "area-a",
          "dndId": "area-acmb_weightResults2"
        },
        {
          "widgetUri": "tbl_knapsackItems",
          "gridArea": "area-a",
          "dndId": "area-atbl_knapsackItems3"
        },
        {
          "widgetUri": "scl_totals",
          "gridArea": "area-b",
          "dndId": "area-bscl_totals4"
        }
      ]
    },
    "layoutId": {
      "literal": "custom_ae8aa3ba-f894-467c-9e3e-6fccf57f8fce"
    },
    "sidepanels": {
      "aimms": {
        "contents": [
          "sp_resultsSidePanel"
        ],
        "slices": [
          {
            "identifier": "sp_resultsSidePanel",
            "slice": [
              {
                "index": "webui::indexPageExtension",
                "type": "free",
                "value": "webui::indexPageExtension"
              },
              {
                "index": "webui::indexSidePanelSpec",
                "type": "free",
                "value": "webui::indexSidePanelSpec"
              }
            ]
          }
        ]
      }
    },
    "widgets": {
      "literal": [
        {
          "uri": "tbl_knapsackItems",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "mslc_multiselectFilter",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "cmb_results",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "cmb_weightResults",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "scl_totals",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        }
      ]
    }
  },
  "widgets/cmb_results": {
    "aimms.widget.type": {
      "literal": "combinationchart"
    },
    "axis.y.0.max": {
      "aimms": {
        "contents": [
          "p_maxItemKnapsack"
        ],
        "slices": []
      }
    },
    "contents.__display_order__": {
      "literal": [
        "contents.0"
      ]
    },
    "contents.0.displaydomain": {
      "literal": ""
    },
    "contents.0.identifier": {
      "literal": {
        "identifier": "v_knapsackItems",
        "slice": [
          {
            "index": "i_item",
            "type": "free",
            "value": "i_item"
          }
        ]
      }
    },
    "contents.numdecimals": {
      "literal": 0
    },
    "contents.partition": {
      "literal": {
        "header": [],
        "grouped": [],
        "stacked": [
          "i_item"
        ],
        "aggregated": [
          "<IDENTIFIER-SET>"
        ]
      }
    },
    "contents.show.units": {
      "literal": true
    },
    "data.interpolate": {
      "literal": false
    },
    "data.labels.show": {
      "literal": true
    },
    "indices.__display_order__": {
      "literal": [
        "indices.0"
      ]
    },
    "indices.0.index": {
      "literal": "i_item"
    },
    "legend.show": {
      "literal": true
    },
    "name": {
      "literal": "cmb_quantityResults"
    },
    "title": {
      "literal": "per Quantity"
    }
  },
  "widgets/cmb_weightResults": {
    "aimms.widget.type": {
      "literal": "combinationchart"
    },
    "axis.y.0.max": {
      "aimms": {
        "contents": [
          "p_maxWeightKnapsack"
        ],
        "slices": []
      }
    },
    "contents.__display_order__": {
      "literal": [
        "contents.0"
      ]
    },
    "contents.0.identifier": {
      "literal": {
        "identifier": "v_inline_knapsackWeight",
        "slice": [
          {
            "index": "i_item",
            "type": "free",
            "value": "i_item"
          }
        ]
      }
    },
    "contents.partition": {
      "literal": {
        "header": [],
        "grouped": [],
        "stacked": [
          "i_item"
        ],
        "aggregated": [
          "<IDENTIFIER-SET>"
        ]
      }
    },
    "contents.show.units": {
      "literal": true
    },
    "data.interpolate": {
      "literal": false
    },
    "data.labels.show": {
      "literal": true
    },
    "indices.__display_order__": {
      "literal": [
        "indices.0"
      ]
    },
    "legend.show": {
      "literal": true
    },
    "name": {
      "literal": "cmb_weightResults"
    },
    "title": {
      "literal": "per Weight"
    }
  },
  "widgets/img_homeLogo": {
    "aimms.widget.type": {
      "literal": "image"
    },
    "contents": {
      "aimms": {
        "contents": [
          "sp_logo"
        ]
      }
    },
    "name": {
      "literal": "img_homeLogo"
    }
  },
  "widgets/mslc_multiselectFilter": {
    "aimms.widget.type": {
      "literal": "multiselect"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_itemFilter"
        ]
      }
    },
    "name": {
      "literal": "mslc_multiselectFilter"
    },
    "title": {
      "literal": "Filter"
    }
  },
  "widgets/scl_addEditElement": {
    "aimms.widget.type": {
      "literal": "scalar"
    },
    "contents": {
      "aimms": {
        "contents": [
          "sp_addEditElement"
        ]
      }
    },
    "contents.labels.visible": {
      "literal": 0
    },
    "name": {
      "literal": "scl_addEditElement"
    }
  },
  "widgets/scl_maxWeightKnapsack": {
    "aimms.widget.type": {
      "literal": "scalar"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_maxWeightKnapsack"
        ]
      }
    },
    "name": {
      "literal": "scl_maxWeightKnapsack"
    },
    "show.units": {
      "literal": 1
    }
  },
  "widgets/scl_maxWeightKnapsack_1": {
    "aimms.widget.type": {
      "literal": "scalar"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_maxItemKnapsack"
        ]
      }
    },
    "contents.numdecimals": {
      "literal": 0
    },
    "name": {
      "literal": "scl_maxItemKnapsack"
    },
    "show.units": {
      "literal": 1
    }
  },
  "widgets/scl_modelInformation": {
    "aimms.widget.type": {
      "literal": "scalar"
    },
    "contents": {
      "aimms": {
        "contents": [
          "ep_programStatus",
          "p_gap",
          "p_numberOfConstraints",
          "p_numberOfVariables",
          "p_solutionTime",
          "v_knapsackTotalValue"
        ]
      }
    },
    "name": {
      "literal": "scl_modelInformation"
    }
  },
  "widgets/scl_totals": {
    "aimms.widget.type": {
      "literal": "scalar"
    },
    "contents": {
      "aimms": {
        "contents": [
          "v_inline_knapsackValue",
          "v_knapsackItems",
          "v_inline_knapsackWeight"
        ]
      }
    },
    "name": {
      "literal": "scl_totals"
    },
    "title": {
      "literal": "Totals"
    }
  },
  "widgets/sld_maxItems": {
    "aimms.widget.type": {
      "literal": "slider"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_itemQuantity"
        ]
      }
    },
    "contents.numdecimals": {
      "literal": 0
    },
    "max": {
      "literal": 100
    },
    "min": {
      "literal": 0
    },
    "name": {
      "literal": "sld_itemQuantity"
    },
    "step": {
      "literal": 1
    }
  },
  "widgets/tbl_items": {
    "aimms.widget.type": {
      "literal": "table"
    },
    "contents": {
      "aimms": {
        "contents": [
          "sp_itemDescription",
          "p_itemValue",
          "p_itemWeight",
          "p_itemRangeMin",
          "p_itemRangeMax",
          "p_itemBound"
        ]
      }
    },
    "contents.displaydomain": {
      "literal": {
        "p_itembound": "1",
        "p_itemvalue": "1",
        "p_itemweight": "1",
        "p_itemrangemax": "1",
        "p_itemrangemin": "1",
        "sp_itemdescription": "1"
      }
    },
    "contents.partition": {
      "literal": {
        "rowHeader": [
          "i_item"
        ],
        "colHeader": [
          "<IDENTIFIER-SET>"
        ],
        "aggregated": []
      }
    },
    "custom.column.widths": {
      "literal": [
        {
          "type": "rowHeader",
          "colKey": "i_item",
          "width": 15.2
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_itemBound"
          },
          "width": 10.75
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_itemRangeMax"
          },
          "width": 14.39
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_itemRangeMin"
          },
          "width": 14.38
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_itemWeight"
          },
          "width": 12.54
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_itemValue"
          },
          "width": 12.95
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "sp_itemDescription"
          },
          "width": 17.36
        }
      ]
    },
    "name": {
      "literal": "tbl_items"
    },
    "store.focus.in": {
      "literal": {
        "i_item": "ep_selectedItem"
      }
    },
    "title": {
      "literal": "Item Information"
    }
  },
  "widgets/tbl_knapsackItems": {
    "aimms.widget.type": {
      "literal": "table"
    },
    "contents": {
      "aimms": {
        "contents": [
          "v_knapsackItems",
          "v_inline_knapsackValue"
        ],
        "prefix": "aimms",
        "partition": {
          "rowHeader": [
            "i_item"
          ],
          "colHeader": [
            "<IDENTIFIER-SET>"
          ],
          "aggregated": []
        },
        "displaydomain": {
          "v_knapsackitems": "p_dom_knapsackResult(i_item)",
          "v_inline_knapsackvalue": "p_dom_knapsackResult(i_item)"
        },
        "slices": [
          {
            "identifier": "v_inline_knapsackValue",
            "slice": [
              {
                "index": "i_item",
                "type": "subset",
                "value": "i_fitem"
              }
            ]
          },
          {
            "identifier": "v_knapsackItems",
            "slice": [
              {
                "index": "i_item",
                "type": "subset",
                "value": "i_fitem"
              }
            ]
          }
        ]
      }
    },
    "contents.displaydomain": {
      "literal": {
        "v_knapsackitems": "p_dom_knapsackResult(i_item)",
        "v_inline_knapsackvalue": "p_dom_knapsackResult(i_item)"
      }
    },
    "contents.partition": {
      "literal": {
        "rowHeader": [
          "i_item"
        ],
        "colHeader": [
          "<IDENTIFIER-SET>"
        ],
        "aggregated": []
      }
    },
    "custom.column.widths": {
      "literal": [
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "v_knapsackValue"
          },
          "width": 17.91
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "v_knapsackItems"
          },
          "width": 18.54
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "v_inline_knapsackValue"
          },
          "width": 23.75
        },
        {
          "type": "rowHeader",
          "colKey": "i_fitem",
          "width": 18.56
        }
      ]
    },
    "name": {
      "literal": "tbl_knapsackItems"
    }
  },
  "widgets/txt_problemDescription": {
    "aimms.widget.type": {
      "literal": "text"
    },
    "contents": {
      "literal": "<div><span style=\"font-size: 32px;\"><b>Story</b></span></div><div><br></div><div><span style=\"font-size: 18px;\">This example introduces a knapsack problem. </span></div><div><br></div><div><span style=\"font-size: 18px;\">Data to this example can be added by:</span></div><ul><li><b style=\"font-size: 18px;\">Importing the Excel file</b><span style=\"font-size: 18px;\"> with a data set of 14 items that can be included in the knapsack and its weight values.</span></li><li><span style=\"font-size: 18px;\"> Create a new scenario by selecting in the slide widget a number of items and then </span><b style=\"font-size: 18px;\">generating random values</b><span style=\"font-size: 18px;\"> for weight and bounds.&nbsp;</span></li></ul><div><span style=\"font-size: 18px;\">&nbsp;</span></div><div><span style=\"font-size: 18px;\">The objective is to maximize the cumulated value of the items. The number of items is restricted by the maximum weight and items that can be carried in the knapsack.</span></div><div><br></div><div><span style=\"font-size: 18px;\">In the classical knapsack problem, each item can be chosen only once. This example also considers variants of the problem in which the number of equal items is unlimited or limited to certain integers.</span></div><div><br></div><div><br></div>"
    },
    "name": {
      "literal": "txt_problemDescription"
    }
  },
  "widgets/txt_welcome": {
    "aimms.widget.type": {
      "literal": "text"
    },
    "contents": {
      "literal": "<div style=\"text-align: center;\">&nbsp;</div><div><b style=\"background-color: inherit; font-size: 32px;\">Welcome!</b></div><div><br></div><div><span style=\"background-color: inherit; font-size: 18px;\">You are in an AIMMS Example. Feel free to play around and create something more in this app!</span></div><div><span style=\"background-color: inherit; font-size: 18px;\">&nbsp;</span></div><div><span style=\"background-color: inherit; font-size: 18px;\">If you do, please fork this repository and commit your changes.&nbsp;</span><b style=\"background-color: inherit; font-size: 18px;\">This ensures our GitHub stays up-to-date for the entire community!</b></div><div><br></div><div><span style=\"background-color: inherit; font-size: 18px;\">You can also check our other interactive resources:</span></div><div><br></div><ul><li><span style=\"background-color: inherit; font-size: 18px;\">In the Online&nbsp;</span><a href=\"https://community.aimms.com/\" target=\"_blank\"><span style=\"background-color: inherit; font-size: 18px;\">Community</span></a><span style=\"background-color: inherit; font-size: 18px;\">, talk to other developers and AIMMSians about the product, modeling, use cases, and more.</span></li><li><span style=\"background-color: inherit; font-size: 18px;\">In the&nbsp;</span><a href=\"https://academy.aimms.com/\" target=\"_blank\"><span style=\"color: rgb(0, 0, 129); background-color: inherit; font-size: 18px;\">Academy</span></a><span style=\"background-color: inherit; font-size: 18px;\">, learn new skills and challenge yourself. We are busy creating new courses, so keep an eye out!</span></li></ul><div><br></div><div><span style=\"background-color: inherit; font-size: 18px;\">For questions that can't be posted on the community, contact us at&nbsp;</span><i style=\"background-color: rgb(255, 255, 204); font-size: 18px;\">support@aimms.com</i><span style=\"background-color: inherit; font-size: 18px;\">.</span></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div>"
    },
    "name": {
      "literal": "txt_welcome"
    }
  }
}